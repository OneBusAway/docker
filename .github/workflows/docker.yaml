name: Docker
on:
  push:
    branches:
      - main
  release:
    types: [ published ]

jobs:
  buildx:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [ bundler, oba ]
        include:
          - name: onebusaway-bundle-builder
            context: bundler
          - name: onebusaway-api-webapp
            context: oba
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.context }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push images
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          # for versioning, use the git sha
          tags: |
            ghcr.io/onebusaway/${{ matrix.name }}:latest
            ghcr.io/onebusaway/${{ matrix.name }}:${{ github.sha }}

  buildx-release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [ bundler, oba ]
        include:
          - name: onebusaway-bundle-builder
            context: bundler
          - name: onebusaway-api-webapp
            context: oba
    steps:
      - name: Compute image tag names
        run: |
          # Set the full version tag (e.g., 2.6.0-v1.0.0)
          echo "IMAGE_TAG=$(echo $GITHUB_REF_NAME)" >> $GITHUB_ENV
          # Extract the software version (e.g., 2.6.0-v1.0.0) and add -latest
          echo "LATEST_TAG=$(echo $GITHUB_REF_NAME | sed 's/-v[0-9]\+\.[0-9]\+\.[0-9]\+/-latest/')" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push images
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            opentransitsoftwarefoundation/${{ matrix.name }}:${{ env.IMAGE_TAG }}
            opentransitsoftwarefoundation/${{ matrix.name }}:${{ env.LATEST_TAG }}
